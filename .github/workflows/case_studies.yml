name: case studies

on:
  schedule:
    # run daily at 8 am UTC = 4 am EDT
    - cron: '0 8 * * *'

jobs:
# from https://stackoverflow.com/questions/63014786/how-to-schedule-a-github-actions-nightly-build-but-run-it-only-when-there-where
  check_date:
    runs-on: self-hosted
    name: Check latest commit
    outputs:
      should_run: ${{ steps.should_run.outputs.should_run }}
    steps:
      - uses: actions/checkout@v2
      - name: print latest_commit
        run: echo ${{ github.sha }}

      - id: should_run
        continue-on-error: true
        name: check latest commit is less than a day
        if: ${{ github.event_name == 'schedule' }}
        run: test -z $(git rev-list  --after="24 hours"  ${{ github.sha }}) && echo "::set-output name=should_run::false"

  build:
    needs: check_date
    if: ${{ needs.check_date.outputs.should_run != 'false' }}

    runs-on: self-hosted

    strategy:
      matrix:
        python-version: [3.8]

    steps:
      - name: Checkout github repo (+ download lfs dependencies)
        uses: actions/checkout@v2
        with:
          lfs: true

      - name: Checkout LFS objects
        run: git lfs checkout

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Create environment variables
        run: echo "BLISS_HOME=$GITHUB_WORKSPACE" >> $GITHUB_ENV

      - name: Install Poetry
        run: |
          pip install --upgrade pip
          pip install "poetry-core>=1.0.0"
          pip install "poetry==1.1.11"

      - name: Poetry cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.cache/pypoetry
          key: ${{ runner.os }}-${{ hashFiles('./poetry.lock') }}

      - name: Install poetry dependencies
        run: |
          poetry install

      - name: Run tests on a GPU
        run: |
          poetry run pytest --gpu

      - name: Run case studies
        run: |
          poetry run make -B -C case_studies/sdss_galaxies_vae/
