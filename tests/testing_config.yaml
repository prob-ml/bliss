---
defaults:
    - ../bliss/conf@_here_: base_config
    - _self_

paths:
    test_data: ${oc.env:BLISS_HOME}/tests/data

    sdss: ${paths.test_data}/sdss
    decals: ${paths.test_data}/decals
    des: ${paths.test_data}/des
    dc2: ${paths.test_data}/dc2

    pretrained_models: ${paths.test_data}/pretrained_models

prior:
    n_tiles_h: 4
    n_tiles_w: 4
    batch_size: 2
    prob_galaxy: 0.5

simulator:
    valid_n_batches: 1
    n_batches: 2
    num_workers: 0

cached_simulator:
    num_workers: 0
    splits: 0:34/34:67/67:100  # train/val/test splits as percent ranges
    batch_size: 1

surveys:
    sdss:
        fields:  # list of dictionaries, each with run, camcol, and list of fields
            - run: 94
              camcol: 1
              fields: [12]
        load_image_data: true
    dc2:
        data_dir: ${paths.dc2}/dc2_multiband/
        split_results_dir: ${paths.output}/dc2_split_results
        n_split: 5
        image_lim: [800, 800]
        batch_size: 4
        split_processes_num: 1

encoder:
    metrics:
        _target_: torchmetrics.MetricCollection
        _convert_: "partial"
        compute_groups: false
        metrics:
            detection_performance:
                _target_: bliss.encoder.metrics.DetectionPerformance
                mag_bin_cutoffs: [19, 19.4, 19.8, 20.2, 20.6, 21, 21.4, 21.8]
            source_type_accuracy:
                _target_: bliss.encoder.metrics.SourceTypeAccuracy
                flux_bin_cutoffs: [200, 400, 600, 800, 1000]
            source_type_accuracy_star:
                _target_: bliss.encoder.metrics.SourceTypeAccuracy
                flux_bin_cutoffs: [200, 400, 600, 800, 1000]
                filter_list:
                    - _target_: bliss.encoder.metrics.SourceTypeFilter
                      filter_type: "star"
            source_type_accuracy_galaxy:
                _target_: bliss.encoder.metrics.SourceTypeAccuracy
                flux_bin_cutoffs: [200, 400, 600, 800, 1000]
                filter_list:
                    - _target_: bliss.encoder.metrics.SourceTypeFilter
                      filter_type: "star"
            flux_error:
                _target_: bliss.encoder.metrics.FluxError
                survey_bands: ${encoder.survey_bands}

#########################################

generate:
    n_image_files: 3
    n_batches_per_file: 1
    cached_data_path: null # use pytest tmpdir

train:
    seed: 42
    weight_save_path: null
    trainer:
        logger: null
        check_val_every_n_epoch: 1
        log_every_n_steps: 1
        accelerator: "cpu"
        devices: 1
        max_epochs: 1
    testing: true
    data_source: ${simulator}

predict:
    decals_frame: ${paths.decals}/336/3366m010/tractor-3366m010.fits
    device: "cpu"
