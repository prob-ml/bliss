# For large scale data generation. From within the base project directory (i.e. the parent directory of case_studies), run the following:

nohup ./scripts/generate_data_in_parallel.sh -n 16 -cp /home/declan/current/bliss/case_studies/redshift_estimation/ -cn redshift.yaml &> generate_output.out &

# For training the encoder.

nohup bliss -cp /home/declan/current/bliss/case_studies/redshift_estimation/ --config-name redshift.yaml &> training.out &


# SDSS-Like Data

The commands below will be used to generate SDSS-like data on my branch dm/redshift estimation. We will generate on batch of data with only stars, and one batch of data with only galaxies. We do this by properly loading the priors `RedshiftCSVPrior` for stars and
`RedshiftCSVPrior_Galaxy` for galaxies as the  `__target__` in our `redshift.yaml` file, and thereafter running the generation command above. No new command needed per se, I just run the same command above *with appropriate changes to the config*. I'm storing thew SDSS-like stars in `/data/scratch/declan/sdss_like_stars`, and I'm storing the SDSS-like galaxies in `/data/scratch/declan/sdss_like_galaxies`. The SDSS-like galaxies were generated from the model using the `RedshiftCSVPrior_Galaxy` class.

Now on to training. We hope that things work reasonably well because the training infrastructure is already set. Again, we should simply be able to use the command above. We have to modify the config to tell it where to access the appropriate cached data, in either `/data/scratch/declan/sdss_like_stars` or `/data/scratch/declan/sdss_like_galaxies`.
