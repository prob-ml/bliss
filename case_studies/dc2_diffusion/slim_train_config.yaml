---
defaults:
    - ../../bliss/conf@_here_: base_config
    - _self_
    - override hydra/job_logging: stdout

mode: train

surveys:
  dc2:
    batch_size: 128

my_diffusion_factors:
  - _target_: case_studies.dc2_diffusion.utils.catalog_parser.OneBitFactor
    n_params: 1
    name: n_sources
    bit_value: 1.0
    threshold: 0.0
    fake_data_on_prop: 1.0
    sample_rearrange: b ht wt 1 -> b ht wt
    loss_gating: null
  - _target_: case_studies.dc2_diffusion.utils.catalog_parser.OneBitFactor
    n_params: 1
    name: source_type
    bit_value: 1.0
    threshold: 0.0
    fake_data_on_prop: 0.95  # fake galaxies
    sample_rearrange: b ht wt 1 -> b ht wt 1 1
    loss_gating:
      _target_: case_studies.dc2_diffusion.utils.catalog_parser.SourcesGating
  - _target_: case_studies.dc2_diffusion.utils.catalog_parser.NormalizedFactor
    n_params: 2
    name: locs
    data_min: 0.0
    data_max: 1.0
    scale: 1.0
    fake_data_dist: uniform
    sample_rearrange: b ht wt d -> b ht wt 1 d
    loss_gating:
      _target_: case_studies.dc2_diffusion.utils.catalog_parser.SourcesGating
  # - _target_: case_studies.dc2_diffusion.utils.catalog_parser.MultiBitsLocsFactor
  #   n_params: 4
  #   name: locs
  #   bit_value: 1.0
  #   one_side_parts: 4
  #   individual_hw: true
  #   sample_rearrange: b ht wt d -> b ht wt 1 d
  #   loss_gating:
  #     _target_: case_studies.dc2_diffusion.utils.catalog_parser.SourcesGating

my_metrics:
  detection_performance:
    _target_: case_studies.dc2_diffusion.utils.metrics.DetectionPerformance
  detection_performance_star:
    _target_: case_studies.dc2_diffusion.utils.metrics.DetectionPerformance
    filter_list:
      - _target_: bliss.encoder.metrics.SourceTypeFilter
        filter_type: star
  detection_performance_galaxy:
    _target_: case_studies.dc2_diffusion.utils.metrics.DetectionPerformance
    filter_list:
      - _target_: bliss.encoder.metrics.SourceTypeFilter
        filter_type: galaxy
  source_type_accuracy:
    _target_: bliss.encoder.metrics.SourceTypeAccuracy
    base_flux_bin_cutoffs: [200, 400, 600, 800, 1000]
    mag_zero_point: 3631e9  # for DC2
    report_bin_unit: mag

my_image_normalizers:
  null_noramlize:
      _target_: case_studies.dc2_cataloging.utils.image_normalizer.NullNormalizer

encoder:
    _target_: case_studies.dc2_diffusion.utils.slim_encoder.SlimDiffusionEncoder
    survey_bands: [u, g, r, i, z, y]
    reference_band: 2
    tile_slen: ${surveys.dc2.tile_slen}
    ddim_steps: 5
    ddim_objective: pred_x0
    ddim_beta_schedule: linear
    ddim_self_cond: false
    correct_bits: true
    empty_tile_random_noise: false
    add_fake_tiles: true
    optimizer_params:
        lr: 1e-3
    scheduler_params:
        milestones: [30, 60, 90]
        gamma: 0.1
    image_normalizers: ${my_image_normalizers}
    catalog_parser:
        _target_: case_studies.dc2_diffusion.utils.catalog_parser.CatalogParser
        factors: ${my_diffusion_factors}
    image_size: [80, 80]
    matcher:
        _target_: bliss.encoder.metrics.CatalogMatcher
        dist_slack: 1.0
        mag_slack: null
        mag_band: 2  # SDSS r-band
    mode_metrics:
        _target_: torchmetrics.MetricCollection
        _convert_: partial
        compute_groups: false
        metrics: ${my_metrics}

train:
    trainer:
        logger:
            name: DC2_diffusion_exp
            version: exp_01-19-12  # change it before running the code
        devices: [4]  # change it before running the code
        use_distributed_sampler: false  # disable this because we use the self-defined distributed sampler
        precision: 32-true
        max_epochs: 100
    data_source: ${surveys.dc2}
    pretrained_weights: null
    seed: 7272
    callbacks:
        early_stopping:
            _target_: pytorch_lightning.callbacks.early_stopping.EarlyStopping
            monitor: val/_loss
            mode: min
            patience: 25