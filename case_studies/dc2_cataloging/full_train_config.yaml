---
defaults:
    - ../../bliss/conf@_here_: base_config
    - _self_
    - override hydra/job_logging: stdout

mode: train

variational_factors:
  - _target_: bliss.encoder.variational_dist.BernoulliFactor
    name: n_sources
    sample_rearrange: null
    nll_rearrange: null
    nll_gating: null
  - _target_: bliss.encoder.variational_dist.TDBNFactor
    name: locs
    sample_rearrange: "b ht wt d -> b ht wt 1 d"
    nll_rearrange: "b ht wt 1 d -> b ht wt d"
    nll_gating: n_sources
  - _target_: bliss.encoder.variational_dist.BernoulliFactor
    name: source_type
    sample_rearrange: "b ht wt -> b ht wt 1 1"
    nll_rearrange: "b ht wt 1 1 -> b ht wt"
    nll_gating: n_sources
  - _target_: bliss.encoder.variational_dist.LogNormalFactor
    name: star_fluxes
    dim: 6
    sample_rearrange: "b ht wt d -> b ht wt 1 d"
    nll_rearrange: "b ht wt 1 d -> b ht wt d"
    nll_gating: is_star
  - _target_: bliss.encoder.variational_dist.LogNormalFactor
    name: galaxy_fluxes
    dim: 6
    sample_rearrange: "b ht wt d -> b ht wt 1 d"
    nll_rearrange: "b ht wt 1 d -> b ht wt d"
    nll_gating: is_galaxy

encoder:
    # _target_: case_studies.dc2_cataloging.utils.encoder.EncoderForDynamicAsinh
    _target_: bliss.encoder.encoder.Encoder
    survey_bands: ["g", "i", "r", "u", "y", "z"]
    tile_slen: 4
    tiles_to_crop: 1
    min_flux_for_loss: 100  # you need to regenerate split_results after changing this number
    min_flux_for_metrics: 100
    optimizer_params:
        lr: 1e-3
    scheduler_params:
        milestones: [32]
        gamma: 0.1
    # image_normalizer:
    #     _target_: case_studies.dc2_cataloging.utils.image_normalizer.DynamicAsinhImageNormalizer
    #     bands: [0, 1, 2, 3, 4, 5]
    #     include_original: false
    #     include_background: false
    #     concat_psf_params: false
    #     num_psf_params: 4  # for SDSS, 4 for DC2
    #     log_transform_stdevs: []
    #     use_clahe: false
    #     clahe_min_stdev: 200
    #     asinh_params:
    #         scale: 1000
    #         thresholds: [-0.3856, -0.1059, -0.0336,  0.0073,  0.0569,  0.1658,  0.6423]
    image_normalizer:
        _target_: case_studies.dc2_cataloging.utils.image_normalizer.FixedThresholdsAsinhImageNormalizer
        bands: [0, 1, 2, 3, 4, 5]
        include_original: false
        include_background: false
        concat_psf_params: true
        num_psf_params: 4  # for SDSS, 4 for DC2
        log_transform_stdevs: []
        use_clahe: true
        clahe_min_stdev: 200
        asinh_params:
            scale: 1000
            thresholds: [-0.3856, -0.1059, -0.0336,  0.0073,  0.0569,  0.1658,  0.6423]
    matcher:
        _target_: bliss.encoder.metrics.CatalogMatcher
        dist_slack: 1.0
        mag_slack: null
        mag_band: 2  # SDSS r-band
    metrics:
        _target_: torchmetrics.MetricCollection
        _convert_: "partial"
        compute_groups: false
        metrics:
          detection_performance:
            _target_: bliss.encoder.metrics.DetectionPerformance
            mag_bin_cutoffs: [200, 400, 600, 800, 1000]
            bin_unit_is_flux: true
          detection_performance_star:
            _target_: bliss.encoder.metrics.DetectionPerformance
            mag_bin_cutoffs: [200, 400, 600, 800, 1000]
            bin_unit_is_flux: true
            filter_list:
              - _target_: bliss.encoder.metrics.SourceTypeFilter
                filter_type: "star"
          detection_performance_galaxy:
            _target_: bliss.encoder.metrics.DetectionPerformance
            mag_bin_cutoffs: [200, 400, 600, 800, 1000]
            bin_unit_is_flux: true
            filter_list:
              - _target_: bliss.encoder.metrics.SourceTypeFilter
                filter_type: "galaxy"
          source_type_accuracy:
            _target_: bliss.encoder.metrics.SourceTypeAccuracy
            flux_bin_cutoffs: [200, 400, 600, 800, 1000]
          source_type_accuracy_star:
            _target_: bliss.encoder.metrics.SourceTypeAccuracy
            flux_bin_cutoffs: [200, 400, 600, 800, 1000]
            filter_list:
              - _target_: bliss.encoder.metrics.SourceTypeFilter
                filter_type: "star"
          source_type_accuracy_galaxy:
            _target_: bliss.encoder.metrics.SourceTypeAccuracy
            flux_bin_cutoffs: [200, 400, 600, 800, 1000]
            filter_list:
              - _target_: bliss.encoder.metrics.SourceTypeFilter
                filter_type: "galaxy"
          flux_error:
            _target_: bliss.encoder.metrics.FluxError
            survey_bands: ${encoder.survey_bands}
          # galaxy_shape_error:
          #   _target_: bliss.encoder.metrics.GalaxyShapeError
    sample_image_renders:
        _target_: torchmetrics.MetricCollection
        metrics:
          - _target_: bliss.encoder.sample_image_renders.PlotSampleImages
            frequency: 1
            restrict_batch: 0
            tiles_to_crop: 1
            tile_slen: ${simulator.prior.tile_slen}

    do_data_augmentation: true
    compile_model: false
    double_detect: false
    use_checkerboard: true

train:
    trainer:
        logger:
            name: DC2_cataloging_exp
            version: exp  # change it before running the code
        # strategy:
        #   _target_: pytorch_lightning.strategies.DDPStrategy
        #   process_group_backend: nccl
        #   timeout:
        #     _target_: datetime.timedelta
        #     seconds: 180000
        devices: [0]  # change it before running the code
    data_source: ${surveys.dc2}
    pretrained_weights: null
    seed: "random"
