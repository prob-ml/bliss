defaults:
    - ../../bliss/conf@_here_: base_config
    - _self_

# Inherits defaults from `base_config`. We add some user-defined
# paths to store artifacts.
paths:
  root: /home/declan/bliss
  data_dir: /data/scratch/declan/redshift/dc2
  processed_data_dir_bliss: ${paths.data_dir}/cached_dc2
  processed_data_dir_rail: ${paths.data_dir}/processed_dc2_rail
  dc2: /nfs/turbo/lsa-regier/lsstdesc-public/dc2
  ckpt_dir: ${paths.data_dir}/checkpoints/discrete/checkpoints
  plot_dir: ${paths.data_dir}/plots

global_setting:
    min_flux_for_loss: 50  # you need to regenerate split_results after changing this number

variational_factors:
  - _target_: case_studies.redshift.redshift_bliss.encoder.variational_dist.DiscretizedFactor1D
    name: redshifts
    sample_rearrange: "b ht wt -> b ht wt 1 1"
    nll_rearrange: "b ht wt 1 1 -> b ht wt"
    nll_gating: is_galaxy
    low: 0
    high: 3
    n_params: 30  # num of bins


encoder:
    _target_: case_studies.redshift.redshift_bliss.encoder.encoder.RedshiftsEncoder
    # _target_: bliss.encoder.encoder.Encoder
    checkpoint_dir: ${train.ckpt_dir}
    plot_dir: ${paths.plot_dir}
    eval_from_checkpoint: true
    survey_bands: ["g", "i", "r", "u", "y", "z"]
    tile_slen: 4
    optimizer_params:
        lr: 1e-3
    scheduler_params:
        milestones: [32]
        gamma: 0.1
    image_normalizers:
        psf:
            _target_: bliss.encoder.image_normalizer.PsfAsImage
            num_psf_params: 4  # 6 for SDSS, 4 for DC2, 10 for DES
        clahe:
            _target_: bliss.encoder.image_normalizer.ClaheNormalizer
            min_stdev: 200
        asinh:
            _target_: bliss.encoder.image_normalizer.AsinhQuantileNormalizer
            q: [0.01, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 0.99, 0.999, 0.9999, 0.99999]
    matcher:
        _target_: case_studies.redshift.redshift_bliss.encoder.metrics.RedshiftsCatalogMatcher
        match_gating: is_galaxy
    mode_metrics:
        _target_: torchmetrics.MetricCollection
        _convert_: "partial"
        metrics: ${mode_sample_metrics}
    sample_metrics:
        _target_: torchmetrics.MetricCollection
        _convert_: "partial"
        metrics: ${mode_sample_metrics}
    var_dist:
        _target_: case_studies.redshift.redshift_bliss.encoder.variational_dist.RedshiftVariationalDist
        tile_slen: ${encoder.tile_slen}
        factors: ${variational_factors}
    use_checkerboard: false
    discrete_metrics:
        _target_: torchmetrics.MetricCollection
        _convert_: "partial"
        metrics: {} # ${discrete_metrics}

# TODO: move to base_config
visualization:
  mag_bin_cutoffs: [23.9, 24.1, 24.5, 24.9, 25.6]
  redshift_bin_cutoffs: [0.5, 1, 1.5, 2, 2.5, 3]

# discrete_metrics:
#     redshift_mean_square_error_bin_mag:
#         _target_: case_studies.redshift.redshift_bliss.encoder.metrics.RedshiftMeanSquaredErrorBin
#         bin_cutoffs: ${visualization.mag_bin_cutoffs}
#         bin_type: "njymag"
#     redshift_outlier_fraction_bin_mag:
#         _target_: case_studies.redshift.redshift_bliss.encoder.metrics.RedshiftOutlierFractionBin
#         bin_cutoffs: ${visualization.mag_bin_cutoffs}
#         bin_type: "njymag"
#     redshift_outlier_fraction_catastrophic_bin_mag:
#         _target_: case_studies.redshift.redshift_bliss.encoder.metrics.RedshiftOutlierFractionCataBin
#         bin_cutoffs: ${visualization.mag_bin_cutoffs}
#         bin_type: "njymag"
#     redshift_abs_bias_bin_mag:
#         _target_: case_studies.redshift.redshift_bliss.encoder.metrics.RedshiftAbsBiasBin
#         bin_cutoffs: ${visualization.mag_bin_cutoffs}
#         bin_type: "njymag"
#     redshift_mean_square_error_bin_rs:
#         _target_: case_studies.redshift.redshift_bliss.encoder.metrics.RedshiftMeanSquaredErrorBin
#         bin_cutoffs: ${visualization.redshift_bin_cutoffs}
#         bin_type: "redshift"
#     redshift_outlier_fraction_bin_rs:
#         _target_: case_studies.redshift.redshift_bliss.encoder.metrics.RedshiftOutlierFractionBin
#         bin_cutoffs: ${visualization.redshift_bin_cutoffs}
#         bin_type: "redshift"
#     redshift_outlier_fraction_catastrophic_bin_rs:
#         _target_: case_studies.redshift.redshift_bliss.encoder.metrics.RedshiftOutlierFractionCataBin
#         bin_cutoffs: ${visualization.redshift_bin_cutoffs}
#         bin_type: "redshift"
#     redshift_abs_bias_bin_rs:
#         _target_: case_studies.redshift.redshift_bliss.encoder.metrics.RedshiftAbsBiasBin
#         bin_cutoffs: ${visualization.redshift_bin_cutoffs}
#         bin_type: "redshift"

# Standard metric computation
mode_sample_metrics:
    redshift_mean_square_error:
        _target_: case_studies.redshift.redshift_bliss.encoder.metrics.RedshiftMeanSquaredError
    redshift_nll:
        _target_: case_studies.redshift.redshift_bliss.encoder.metrics.RedshiftMeanNLL
    # redshift_mean_square_error_bin_mag:
    #     _target_: case_studies.redshift.redshift_bliss.encoder.metrics.RedshiftMeanSquaredErrorBin
    #     bin_cutoffs: ${visualization.mag_bin_cutoffs}
    #     bin_type: "njymag"
    # redshift_mean_square_error_bin_rs:
    #     _target_: case_studies.redshift.redshift_bliss.encoder.metrics.RedshiftMeanSquaredErrorBin
    #     bin_cutoffs: ${visualization.redshift_bin_cutoffs}
    #     bin_type: "redshift"
    # redshift_outlier_fraction:
    #     _target_: case_studies.redshift.redshift_bliss.encoder.metrics.RedshiftOutlierFraction
    # redshift_outlier_fraction_bin_mag:
    #     _target_: case_studies.redshift.redshift_bliss.encoder.metrics.RedshiftOutlierFractionBin
    #     bin_cutoffs: ${visualization.mag_bin_cutoffs}
    #     bin_type: "njymag"
    # redshift_outlier_fraction_bin_rs:
    #     _target_: case_studies.redshift.redshift_bliss.encoder.metrics.RedshiftOutlierFractionBin
    #     bin_cutoffs: ${visualization.redshift_bin_cutoffs}
    #     bin_type: "redshift"
    # redshift_outlier_fraction_catastrophic:
    #     _target_: case_studies.redshift.redshift_bliss.encoder.metrics.RedshiftOutlierFractionCata
    # redshift_outlier_fraction_catastrophic_bin_mag:
    #     _target_: case_studies.redshift.redshift_bliss.encoder.metrics.RedshiftOutlierFractionCataBin
    #     bin_cutoffs: ${visualization.mag_bin_cutoffs}
    #     bin_type: "njymag"
    # redshift_outlier_fraction_catastrophic_bin_rs:
    #     _target_: case_studies.redshift.redshift_bliss.encoder.metrics.RedshiftOutlierFractionCataBin
    #     bin_cutoffs: ${visualization.redshift_bin_cutoffs}
    #     bin_type: "redshift"
    # redshift_bias:
    #     _target_: case_studies.redshift.redshift_bliss.encoder.metrics.RedshiftBias
    # redshift_bias_bin_mag:
    #     _target_: case_studies.redshift.redshift_bliss.encoder.metrics.RedshiftBiasBin
    #     bin_cutoffs: ${visualization.mag_bin_cutoffs}
    #     bin_type: "njymag"
    # redshift_bias_bin_rs:
    #     _target_: case_studies.redshift.redshift_bliss.encoder.metrics.RedshiftBiasBin
    #     bin_cutoffs: ${visualization.redshift_bin_cutoffs}
    #     bin_type: "redshift"
    # redshift_abs_bias:
    #     _target_: case_studies.redshift.redshift_bliss.encoder.metrics.RedshiftAbsBias
    # redshift_abs_bias_bin_mag:
    #     _target_: case_studies.redshift.redshift_bliss.encoder.metrics.RedshiftAbsBiasBin
    #     bin_cutoffs: ${visualization.mag_bin_cutoffs}
    #     bin_type: "njymag"
    # redshift_abs_bias_bin_rs:
    #     _target_: case_studies.redshift.redshift_bliss.encoder.metrics.RedshiftAbsBiasBin
    #     bin_cutoffs: ${visualization.redshift_bin_cutoffs}
    #     bin_type: "redshift"
    # redshift_L1_bin_mag:
    #     _target_: case_studies.redshift.redshift_bliss.encoder.metrics.RedshiftL1Bin
    #     bin_cutoffs: ${visualization.mag_bin_cutoffs}
    #     bin_type: "njymag"
    # redshift_L1_bin_rs:
    #     _target_: case_studies.redshift.redshift_bliss.encoder.metrics.RedshiftL1Bin
    #     bin_cutoffs: ${visualization.redshift_bin_cutoffs}
    #     bin_type: "redshift"

timestamp: ${now:%Y-%m-%d-%H-%M-%S}

train:
    dc2_split: 0
    trainer:
        logger:
            name: checkpoints
            version: discrete_split_${surveys.dc2.split_to_use}_${timestamp}
            save_dir: ${paths.data_dir}
        precision: 32
        strategy:
          _target_: pytorch_lightning.strategies.DDPStrategy
          find_unused_parameters: true
          process_group_backend: nccl
          timeout:
            _target_: datetime.timedelta
            seconds: 180000
        val_check_interval: 1.0
        # check_val_every_n_epoch: 1
        # devices: [0, 2, 3, 4]
        devices: [0]
        max_epochs: 50
    callbacks:
        checkpointing:
            _target_: pytorch_lightning.callbacks.ModelCheckpoint
            filename: encoder_{val/mode/redshift_mean_square_error_redshifts/mse:.6f}
            save_top_k: 5
            verbose: True
            #  monitor: val/_loss
            monitor: val/mode/redshift_mean_square_error_redshifts/mse
            mode: min
        early_stopping:
            _target_: pytorch_lightning.callbacks.early_stopping.EarlyStopping
            monitor: val/_loss
            mode: min
            patience: 500
    ckpt_dir: ${paths.data_dir}/checkpoints/${train.trainer.logger.version}/${train.trainer.logger.name}
    data_source: ${surveys.dc2}
    pretrained_weights: null
    seed: 123


# Defaults from `base_config`. We modify cached path and use own class
surveys:
  dc2:
      _target_: case_studies.redshift.artifacts.redshift_dc2.RedshiftDC2DataModule
      cached_data_path: ${paths.processed_data_dir_bliss}
      dc2_cat_path: /data/scratch/dc2local/merged_catalog_with_flux_over_50.pkl # we should have a script that makes this on our own
      batch_size: 64
      max_sources_per_tile: 5
      split_to_use: ${train.dc2_split}
