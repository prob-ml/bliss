---
defaults:
    - ../../../bliss/conf@_here_: base_config
    - _self_
    - override hydra/job_logging: stdout

mode: train

paths:
    dc2: /data/scratch/dc2local
    output: /home/twhit/bliss

variational_factors:
  - _target_: bliss.encoder.variational_dist.IndependentMVNFactor
    name: shear_1
    dim: ${surveys.dc2.num_redshift_bins}
    nll_gating: null
  - _target_: bliss.encoder.variational_dist.IndependentMVNFactor
    name: shear_2
    dim: ${surveys.dc2.num_redshift_bins}
    nll_gating: null
  - _target_: bliss.encoder.variational_dist.IndependentMVNFactor
    name: convergence
    dim: ${surveys.dc2.num_redshift_bins}
    nll_gating: null

lensing_normalizers_nan:
    nan:
        _target_: case_studies.weak_lensing.image_normalizer.NanNormalizer

lensing_normalizers_nanpsf:
    nan:
        _target_: case_studies.weak_lensing.image_normalizer.NanNormalizer
    psf:
        _target_: bliss.encoder.image_normalizer.PsfAsImage
        num_psf_params: 4

lensing_metrics:
    _target_: case_studies.weak_lensing.metrics.WeakLensingMetrics
    num_redshift_bins: ${surveys.dc2.num_redshift_bins}

lensing_plots:
    _target_: case_studies.weak_lensing.plots.WeakLensingPlots
    frequency: 1
    save_local: ${paths.output}/${train.trainer.logger.name}/${train.trainer.logger.version}/lensing_plots

encoder:
    _target_: case_studies.weak_lensing.encoder.WeakLensingEncoder
    survey_bands: ["u", "g", "r", "i", "z", "y"]
    reference_band: 2  # r-band
    tile_slen: 256
    n_pixels_per_side: 2048
    n_tiles_per_side: 8
    ch_init: 64
    ch_max: 512
    ch_final: 128
    initial_downsample: false
    more_up_layers: true
    num_bottleneck_layers: 0
    optimizer_params:
        lr: 1e-4
    scheduler_params:
        milestones: []
        gamma: 1.0
    image_normalizers: ${lensing_normalizers_nanpsf}
    var_dist:
        _target_: bliss.encoder.variational_dist.VariationalDist
        tile_slen: ${encoder.tile_slen}
        factors: ${variational_factors}
    mode_metrics:
        _target_: torchmetrics.MetricCollection
        _convert_: partial
        metrics: ${lensing_metrics}
    sample_metrics:
        _target_: torchmetrics.MetricCollection
        _convert_: partial
        metrics: ${lensing_metrics}
    sample_image_renders:
        _target_: torchmetrics.MetricCollection
        _convert_: partial
        metrics: ${lensing_plots}
    use_double_detect: false
    use_checkerboard: false
    loss_plots_location: ${paths.output}/${train.trainer.logger.name}/${train.trainer.logger.version}/loss_plots

surveys:
    dc2:
        _target_: case_studies.weak_lensing.dc2.dc2.LensingDC2DataModule
        dc2_image_dir: /data/scratch/dc2_nfs/run2.2i-dr6-v4/coadd-t3828-t3829/deepCoadd-results/
        dc2_cat_path: ${paths.dc2}/dc2_lensing_catalog.pkl
        image_slen: 4096
        n_image_split: 2  # split into n_image_split**2 subimages
        tile_slen: 256
        splits: 0:80/80:90/90:100
        avg_ellip_kernel_size: 15  # must be odd
        avg_ellip_kernel_sigma: 15
        redshift_quantiles: [0.00, 0.6849667429924011, 1.1680253744125366]
        num_redshift_bins: 3  # length of redshift_quantiles
        batch_size: 1
        num_workers: 1
        cached_data_path: ${paths.dc2}/dc2_lensing_splits_redbin3
        train_transforms:
            - _target_: case_studies.weak_lensing.data_augmentation.LensingRotateFlipTransform
        shuffle_file_order: false  # partition train/val/test by ra/dec so that we can compute 2PCFs on spatially contiguous test set

train:
    trainer:
        logger:
            name: WeakLensingResultsDC2
            version: ${now:%Y-%m-%d_%H-%M}
        max_epochs: 300
        devices: 1
        use_distributed_sampler: false
        precision: 32-true
    callbacks:
        early_stopping:
            patience: 100
    data_source: ${surveys.dc2}
    pretrained_weights: null
    seed: 123123
