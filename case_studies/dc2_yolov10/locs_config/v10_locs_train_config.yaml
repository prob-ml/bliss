---
defaults:
    - ../../../bliss/conf@_here_: base_config
    - _self_
    - override hydra/job_logging: stdout

mode: train

surveys:
  dc2:
    batch_size: 128

my_metrics:
  detection_performance:
    _target_: case_studies.dc2_yolov10.utils.metrics.DetectionPerformance
  detection_performance_one_source_mask:
    _target_: case_studies.dc2_yolov10.utils.metrics.DetectionPerformance
    filter_list:
        - _target_: case_studies.dc2_yolov10.utils.metrics.SourceCountFilter
          filter_source_count: 1m
  detection_performance_two_sources_mask:
    _target_: case_studies.dc2_yolov10.utils.metrics.DetectionPerformance
    filter_list:
        - _target_: case_studies.dc2_yolov10.utils.metrics.SourceCountFilter
          filter_source_count: 2m
  detection_performance_more_than_two_sources_mask:
    _target_: case_studies.dc2_yolov10.utils.metrics.DetectionPerformance
    filter_list:
        - _target_: case_studies.dc2_yolov10.utils.metrics.SourceCountFilter
          filter_source_count: 2plus
  detection_performance_in_boundary:
    _target_: case_studies.dc2_yolov10.utils.metrics.DetectionPerformance
    filter_list:
        - _target_: case_studies.dc2_yolov10.utils.metrics.InBoundaryFilter
          tile_slen: ${surveys.dc2.tile_slen}
          boundary_width: 0.2
  detection_performance_out_boundary:
    _target_: case_studies.dc2_yolov10.utils.metrics.DetectionPerformance
    filter_list:
        - _target_: case_studies.dc2_yolov10.utils.metrics.OutBoundaryFilter
          tile_slen: ${surveys.dc2.tile_slen}
          boundary_width: 0.2

my_image_normalizers:
  asinh:
    _target_: bliss.encoder.image_normalizer.AsinhQuantileNormalizer
    q: [0.01, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 0.99, 0.999, 0.9999, 0.99999]

encoder:
    _target_: case_studies.dc2_yolov10.utils.encoder.v10LocsEncoder
    survey_bands: [u, g, r, i, z, y]
    reference_band: 2
    tile_slen: ${surveys.dc2.tile_slen}
    optimizer_params:
        lr: 1e-3
        amsgrad: true  # to make adam more stable
    scheduler_params:
        milestones: [30]
        gamma: 0.1
    image_normalizers: ${my_image_normalizers}
    image_size: [80, 80]
    matcher:
        _target_: bliss.encoder.metrics.CatalogMatcher
        dist_slack: 1.0
        mag_slack: null
        mag_band: 2  # SDSS r-band
    mode_metrics:
        _target_: torchmetrics.MetricCollection
        _convert_: partial
        compute_groups: false
        metrics: ${my_metrics}

train:
    trainer:
        logger:
            name: DC2_v10_locs_exp
            version: exp_02-26-2  # change it before running the code
        devices: [4]  # change it before running the code
        use_distributed_sampler: false  # disable this because we use the self-defined distributed sampler
        precision: 32-true
        max_epochs: 50
        # detect_anomaly: false
        # gradient_clip_val: 0.0
    data_source: ${surveys.dc2}
    pretrained_weights: null
    seed: 7272
    callbacks:
        early_stopping:
            _target_: pytorch_lightning.callbacks.early_stopping.EarlyStopping
            monitor: val/_loss
            mode: min
            patience: 25